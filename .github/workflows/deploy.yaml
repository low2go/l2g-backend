name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_EC2_PEM }}" > ~/.ssh/low2gostores.pem
          chmod 600 ~/.ssh/low2gostores.pem

      - name: Build the Project
        run: |
          mvn clean package -Dmaven.test.skip=true
          echo "Build complete!"

      - name: Deploy to EC2
        run: |
          # Dynamically find the built JAR file
          JAR_FILE=$(ls target/l2g-backend-*.jar | head -n 1)
          echo "Deploying JAR file: $JAR_FILE"

          # Copy the new JAR file to the EC2 instance
          echo "Copying JAR file to EC2 instance"
          scp -i ~/.ssh/low2gostores.pem -o StrictHostKeyChecking=no "$JAR_FILE" ubuntu@ec2-13-58-26-172.us-east-2.compute.amazonaws.com:/home/ubuntu/test.jar

          # Execute SSH commands to kill old processes and start the new application
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/low2gostores.pem ubuntu@ec2-13-58-26-172.us-east-2.compute.amazonaws.com << 'EOF'
            echo "Killing existing Java processes"
            pids=$(ps aux | grep '[j]ava' | awk '{print $2}')
            if [ -n "$pids" ]; then
              echo "Found Java processes: $pids"
              echo "$pids" | xargs sudo kill -9 || true
            else
              echo "No Java processes found to kill"
            fi

            echo "Starting the new application"
            java -jar -Dspring.profiles.active=local /home/ubuntu/test.jar > /home/ubuntu/app_startup.log 2>&1 &

            # Give the process a few seconds to start
            sleep 5
          
            # Verify if the process is running
            if pgrep -f '/home/ubuntu/test.jar' > /dev/null; then
              echo "Application is running successfully"
            else
              echo "Application failed to start. Check logs at /home/ubuntu/app_startup.log"
              exit 1
            fi
          
          exit

          EOF
