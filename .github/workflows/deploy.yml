name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Maven
        run: mvn --version

      - name: Build the project
        run: mvn clean package

      - name: Extract Artifact Name
        id: artifact_name
        run: |
          ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=artifactId -q -DforceStdout)-$(mvn help:evaluate -Dexpression=version -q -DforceStdout).jar
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_EC2_PEM }}" > ~/.ssh/low2gostores.pem
          chmod 600 ~/.ssh/low2gostores.pem

      - name: Deploy to EC2
        run: |
          # Kill existing Java processes on the server
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/low2gostores.pem ubuntu@ec2-13-58-26-172.us-east-2.compute.amazonaws.com << 'EOF'
            ps aux | grep '[j]ava' | awk '{print $2}' | xargs sudo kill -9 || true
            echo "Old process killed"
          EOF

          # Copy the built JAR file to EC2
          scp -i ~/.ssh/low2gostores.pem target/${{ env.ARTIFACT_NAME }} ubuntu@ec2-13-58-26-172.us-east-2.compute.amazonaws.com:/home/ubuntu/${{ env.ARTIFACT_NAME }}

          # Start the new application on the server
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/low2gostores.pem ubuntu@ec2-13-58-26-172.us-east-2.compute.amazonaws.com << EOF
            nohup java -jar -Dspring.profiles.active=local /home/ubuntu/${{ env.ARTIFACT_NAME }} > /home/ubuntu/app.log 2>&1 &
            echo \$! > /home/ubuntu/app.pid
            echo "Application started with PID \$(cat /home/ubuntu/app.pid)"
          EOF
