name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_EC2_PEM }}" > ~/.ssh/low2gostores.pem
          chmod 600 ~/.ssh/low2gostores.pem

      - name: Build the Project
        run: |
          mvn clean package -Dmaven.test.skip=true
          echo "Build complete!"

      - name: Deploy to EC2
        run: |
          # Dynamically find the built JAR file and extract the version
          JAR_FILE=$(ls target/l2g-backend-*.jar | head -n 1)
          JAR_NAME=$(basename $JAR_FILE)
          JAR_VERSION=$(echo $JAR_NAME | sed -E 's/l2g-backend-(.*)\.jar/\1/')
          echo "Deploying JAR file: $JAR_NAME with version: $JAR_VERSION"

          # SSH commands to kill old Java processes, copy new JAR, and restart the app
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/low2gostores.pem ubuntu@ec2-13-58-26-172.us-east-2.compute.amazonaws.com << EOF
            # Kill existing Java processes if any
            ps aux | grep '[j]ava' | awk '{print $2}' | xargs sudo kill -9 || true

            # Copy the new JAR file to EC2 with the correct version
            echo "Copying new JAR file"
            scp -i ~/.ssh/low2gostores.pem $JAR_FILE ubuntu@ec2-13-58-26-172.us-east-2.compute.amazonaws.com:/home/ubuntu/$JAR_NAME

            # Run the new application
            echo "Starting new application"
            nohup java -jar -Dspring.profiles.active=local /home/ubuntu/$JAR_NAME > /dev/null 2>&1 &

            # Exit the SSH session
            exit
          EOF
